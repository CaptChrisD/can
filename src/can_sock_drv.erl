%% Generated by eapi (DO NOT EDIT)
-module(can_sock_drv).

-export([set_loopback/2]).
-export([ifindex/2]).
-export([ifname/2]).
-export([bind/2]).
-export([send/3]).
-export([recv_own_messages/2]).
-export([set_error_filter/2]).
-include_lib("eapi/include/cbuf.hrl").
-include("../include/can.hrl").
-include("can_sock_drv.hrl").

e_struct_can_frame(R)->
  Data__size = byte_size(R#can_frame.data),  <<?uint32_t((R#can_frame.id)),?uint8_t((R#can_frame.len)),?uint32_t(Data__size),(R#can_frame.data)/binary,?int_t((R#can_frame.intf)),?int_t((R#can_frame.ts))>>.

ifname(EApiPort,Index) -> 
  eapi_drv:control(EApiPort,?CAN_SOCK_DRV_CMD_IFNAME, <<?int_t((Index))>>).
ifindex(EApiPort,Name) -> 
  Name__bin = list_to_binary([Name]),Name__size = byte_size(Name__bin),
  eapi_drv:control(EApiPort,?CAN_SOCK_DRV_CMD_IFINDEX, <<?uint32_t(Name__size),Name__bin/binary>>).
set_error_filter(EApiPort,Mask) -> 
  eapi_drv:control(EApiPort,?CAN_SOCK_DRV_CMD_SET_ERROR_FILTER, <<?uint32_t((Mask))>>).
set_loopback(EApiPort,Enable) -> 
  Enable__bool=if (Enable) -> 1; true -> 0 end,
  eapi_drv:control(EApiPort,?CAN_SOCK_DRV_CMD_SET_LOOPBACK, <<?uint8_t(Enable__bool)>>).
recv_own_messages(EApiPort,Enable) -> 
  Enable__bool=if (Enable) -> 1; true -> 0 end,
  eapi_drv:control(EApiPort,?CAN_SOCK_DRV_CMD_RECV_OWN_MESSAGES, <<?uint8_t(Enable__bool)>>).
bind(EApiPort,Index) -> 
  eapi_drv:control(EApiPort,?CAN_SOCK_DRV_CMD_BIND, <<?int_t((Index))>>).
send(EApiPort,Index,Frame) -> 
  Frame__bin = e_struct_can_frame(Frame),Frame__size = byte_size(Frame__bin),
 eapi_drv:command(EApiPort,?CAN_SOCK_DRV_CMD_SEND, [<<?int_t((Index))>>,<<?uint32_t(Frame__size),Frame__bin/binary>>]).
