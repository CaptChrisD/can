# CAN binding for Erlang #

CAN or Controller Area Network for short, is a two wire serial protcol
for industrial applications.

This implementation currently supports three different backends,
can_usb: CANUSB is a USB dongle from [LAWICEL AB](http://www.canusb.com).
can_udp: This is my own invention. A simple repackaging of CAN frames into UDP/IP datagrams sent over local multicast channel.
can_sock: A binding to linux SocketCAN interface.

Any number of backend interfaces may be started and attached to the
can_router, which is the main interface to receice and send CAN frames.
An application will typically can can_router:attach() and then 
receive CAN frames from any of the interfaces. To send a frame then
simple call can:send/*n*, this will pass the CAN frame to all the
interfaces and connected local applications in the Erlang node.
