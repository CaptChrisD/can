// Generated by eapi (DO NOT EDIT)
#ifndef __CAN_SOCK_H__
#define __CAN_SOCK_H__

struct can_frame_t {
uint32_t id;
uint8_t rtr;
uint8_t ext;
int intf;
uint8_t len;
eapi_binary_t data;

};
extern int d_struct_can_frame_t(eapi_ctx_t* ctx, cbuf_t* c_in, struct can_frame_t *ptr);
#define CAN_SOCK_DRV_CMD_IFNAME 1
extern void can_sock_drv_impl_ifname(eapi_ctx_t* ctx,cbuf_t* c_out,int index);
#define CAN_SOCK_DRV_CMD_IFINDEX 2
extern void can_sock_drv_impl_ifindex(eapi_ctx_t* ctx,cbuf_t* c_out,eapi_string_t name);
#define CAN_SOCK_DRV_CMD_SET_ERROR_FILTER 3
extern void can_sock_drv_impl_set_error_filter(eapi_ctx_t* ctx,cbuf_t* c_out,uint32_t mask);
#define CAN_SOCK_DRV_CMD_SET_LOOPBACK 4
extern void can_sock_drv_impl_set_loopback(eapi_ctx_t* ctx,cbuf_t* c_out,uint8_t enable);
#define CAN_SOCK_DRV_CMD_RECV_OWN_MESSAGES 5
extern void can_sock_drv_impl_recv_own_messages(eapi_ctx_t* ctx,cbuf_t* c_out,uint8_t enable);
#define CAN_SOCK_DRV_CMD_BIND 6
extern void can_sock_drv_impl_bind(eapi_ctx_t* ctx,cbuf_t* c_out,int index);
#define CAN_SOCK_DRV_CMD_SEND 7
extern void can_sock_drv_impl_send(eapi_ctx_t* ctx,cbuf_t* c_out,struct can_frame_t* frame);
#endif
